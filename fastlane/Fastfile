fastlane_version "1.48.0"

default_platform :ios

platform :ios do

    before_all do |lane|
        if is_ci?
            puts "I'm a computer"
        else
            puts "Hi Human!"
        end
        if lane == :test || lane == :testflight
            ensure_git_status_clean
        end
    end

    after_all do |lane|
        # In case tests need to have dependencies updated, reset any changes at the end
        if lane == :test
            resetGitRepo
        end
    end

    error do |lane, exception|
        if is_ci?
            if lane == :test || lane == :testflight
                resetGitRepo
            end
        end
    end

  desc "Runs all tests"
  desc "Optionally override the updateDependencies lane to make sure tests use the latest version of certain dependencies"
  lane :test do
    updateDependencies
    runAllTests
  end

  desc "Submits app to TestFlight"
  desc "Optional parameter: buildNumber (if not provided, build number is incremented by 1)"
  lane :testflight do |options|
    ensureGitBranch
    incrementBuildNumber(options)
    manageProvisioningProfiles
    build
    uploadToTestFlight
    commitBuildNumberBump
    addGitTag
    pushToGitRemote
  end

  desc "Manages provisioning profiles using sigh"
  desc "Override this lane to provide custom provisioning profile management (e.g. app with multiple bundle IDs)"
  lane :manageProvisioningProfiles do
    sigh
  end

    desc "Update dependencies (default behaviour does nothing)"
    desc "Override this lane to provide custom behaviour (e.g. make sure that certain dependencies are updated to their latest versions)"
    lane :updateDependencies do
    end

  desc "Increments patch version number"
  lane :incrementPatchVersionNumber do
    increment_version_number(
        xcodeproj: ENV['IFA_XCODE_PROJECT'],
        bump_type: "patch"
    )
	updatePodspecVersionNumber
  end

  desc "Increments minor version number"
  lane :incrementMinorVersionNumber do
    increment_version_number(
        xcodeproj: ENV['IFA_XCODE_PROJECT'],
        bump_type: "minor"
    )
	updatePodspecVersionNumber
  end

  desc "Increments major version number"
  lane :incrementMajorVersionNumber do
    increment_version_number(
        xcodeproj: ENV['IFA_XCODE_PROJECT'],
        bump_type: "major"
    )
	updatePodspecVersionNumber
  end

  desc "Gets version number"
  lane :getVersionNumber do
    get_version_number(
        xcodeproj: ENV['IFA_XCODE_PROJECT']
    )
  end

  #################
  # PRIVATE LANES #
  #################

  private_lane :ensureGitBranch do
    ensure_git_branch(
        branch: ENV['IFA_GIT_BRANCH']
    )
  end

  private_lane :incrementBuildNumber do |options|
    increment_build_number(
        xcodeproj: ENV['IFA_XCODE_PROJECT'],
        build_number: options[:buildNumber]
    )
  end

  private_lane :runAllTests do
    scan(
        workspace: ENV['IFA_XCODE_WORKSPACE'],
        scheme: ENV['IFA_XCODE_SCHEME'],
        skip_slack: true
    )
  end

  private_lane :build do
    gym(
        workspace: ENV['IFA_XCODE_WORKSPACE'],
        scheme: ENV['IFA_XCODE_SCHEME'],
        clean: true
    )
  end

  private_lane :uploadToTestFlight do
    pilot(
        skip_submission: true,
        changelog: File.read(ENV['IFA_CHANGELOG'])
    )
  end

  private_lane :commitBuildNumberBump do
    commit_version_bump(
        message: "Build number bump",
        xcodeproj: ENV['IFA_XCODE_PROJECT']
    )
  end

  private_lane :addGitTag do
    buildNumber = get_build_number(xcodeproj: ENV['IFA_XCODE_PROJECT'])
    add_git_tag(
        tag: "build-#{buildNumber}"
    )
  end

  private_lane :pushToGitRemote do
    push_to_git_remote(
      local_branch: ENV['IFA_GIT_BRANCH']
    )
  end

  private_lane :resetGitRepo do
    reset_git_repo(
        force: true,
        disregard_gitignore: true
    )
  end

  private_lane :updatePodspecVersionNumber do
  	# Only useful if a podspec exists (i.e. most likely it is a framework)
  	if !Dir.glob('../*.podspec').empty?
  		version_bump_podspec(
    		version_number: getVersionNumber
    	)
  	end
  end

end
